// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: ui

#ifndef _UI_UI_H
#define _UI_UI_H

#ifdef __cplusplus
extern "C" {
#endif

    #include "lvgl/lvgl.h"

#include "ui_helpers.h"
#include "components/ui_comp.h"
#include "components/ui_comp_hook.h"
#include "ui_events.h"
void Load_Animation( lv_obj_t *TargetObject, int delay);
// SCREEN: ui_Boot
void ui_Boot_screen_init(void);
extern lv_obj_t *ui_Boot;
extern lv_obj_t *ui_boot_message;
extern lv_obj_t *ui_boot_error_heading;
extern lv_obj_t *ui_Container6;
extern lv_obj_t *ui_boot_error_text;
// SCREEN: ui_Home
void ui_Home_screen_init(void);
void ui_event_Home( lv_event_t * e);
extern lv_obj_t *ui_Home;
extern lv_obj_t *ui_Header;
extern lv_obj_t *ui_Clock_container;
extern lv_obj_t *ui_clock_value;
extern lv_obj_t *ui_Humidity;
extern lv_obj_t *ui_Humidity_symbol;
extern lv_obj_t *ui_Humidity_value;
void ui_event_Fan( lv_event_t * e);
extern lv_obj_t *ui_Fan;
extern lv_obj_t *ui_Fan_symbol;
extern lv_obj_t *ui_Fan_value;
extern lv_obj_t *ui_out_temp;
extern lv_obj_t *ui_out_symbol;
extern lv_obj_t *ui_Out_temp_value;
void ui_event_settings( lv_event_t * e);
extern lv_obj_t *ui_settings;
extern lv_obj_t *ui_settings_symbol;
extern lv_obj_t *ui_Footer;
extern lv_obj_t *ui_message_container;
extern lv_obj_t *ui_message_close;
extern lv_obj_t *ui_message_text;
extern lv_obj_t *ui_Indoor_Temp;
void ui_event_indoor_temps_container( lv_event_t * e);
extern lv_obj_t *ui_indoor_temps_container;
extern lv_obj_t *ui_Indoor_temp_value;
extern lv_obj_t *ui_Temp_setpoint_container;
extern lv_obj_t *ui_Setpoint_row;
extern lv_obj_t *ui_Heat_setpoint_container;
extern lv_obj_t *ui_Heat_symbol;
extern lv_obj_t *ui_Heat_setpoint;
extern lv_obj_t *ui_Cool_setpoint_container;
extern lv_obj_t *ui_Cool_symbol;
extern lv_obj_t *ui_Cool_setpoint;
extern lv_obj_t *ui_Temp_header;
extern lv_obj_t *ui_Indoor_co2;
extern lv_obj_t *ui_co2_header;
void ui_event_co2_container( lv_event_t * e);
extern lv_obj_t *ui_co2_container;
extern lv_obj_t *ui_co2_value;
extern lv_obj_t *ui_co2_setpoint_container;
extern lv_obj_t *ui_co2_symbol;
extern lv_obj_t *ui_co2_target_value;
// SCREEN: ui_Fan_speed_override
void ui_Fan_speed_override_screen_init(void);
extern lv_obj_t *ui_Fan_speed_override;
extern lv_obj_t *ui_fan_setting_header;
void ui_event_fan_setting_header_Setting_back_button( lv_event_t * e);
void ui_event_fan_setting_header_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_fan_override_container;
extern lv_obj_t *ui_Override_speed_container;
extern lv_obj_t *ui_Fan_override_speed;
extern lv_obj_t *ui_Label5;
extern lv_obj_t *ui_Divider;
extern lv_obj_t *ui_Override_time_container;
extern lv_obj_t *ui_Override_hrs_container;
extern lv_obj_t *ui_Fan_override_hrs;
extern lv_obj_t *ui_Label1;
extern lv_obj_t *ui_Label6;
extern lv_obj_t *ui_Override_mins_container;
extern lv_obj_t *ui_Fan_override_mins;
extern lv_obj_t *ui_Label2;
extern lv_obj_t *ui_fan_override_secondary_container;
extern lv_obj_t *ui_Label21;
// SCREEN: ui_Thermostat
void ui_Thermostat_screen_init(void);
void ui_event_Thermostat( lv_event_t * e);
extern lv_obj_t *ui_Thermostat;
extern lv_obj_t *ui_Thermostat_setting_header;
void ui_event_Thermostat_setting_header_Setting_back_button( lv_event_t * e);
void ui_event_Thermostat_setting_header_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container1;
extern lv_obj_t *ui_Override_heat_container;
extern lv_obj_t *ui_Heat_override_setpoint;
extern lv_obj_t *ui_Label3;
extern lv_obj_t *ui_Override_cool_container;
extern lv_obj_t *ui_Label4;
extern lv_obj_t *ui_Cool_override_setpoint;
extern lv_obj_t *ui_Divider1;
extern lv_obj_t *ui_Schedule_buttons;
void ui_event_schedule_button( lv_event_t * e);
extern lv_obj_t *ui_schedule_button;
extern lv_obj_t *ui_Label8;
extern lv_obj_t *ui_ac_button_container;
void ui_event_use_ac_button( lv_event_t * e);
extern lv_obj_t *ui_use_ac_button;
extern lv_obj_t *ui_Label9;
void ui_event_stop_ac_button( lv_event_t * e);
extern lv_obj_t *ui_stop_ac_button;
extern lv_obj_t *ui_Label12;
void ui_event_allow_ac_button( lv_event_t * e);
extern lv_obj_t *ui_allow_ac_button;
extern lv_obj_t *ui_Label22;
extern lv_obj_t *ui_power_button_container;
void ui_event_off_button( lv_event_t * e);
extern lv_obj_t *ui_off_button;
extern lv_obj_t *ui_Label7;
void ui_event_on_button( lv_event_t * e);
extern lv_obj_t *ui_on_button;
extern lv_obj_t *ui_Label10;
// SCREEN: ui_CO2
void ui_CO2_screen_init(void);
void ui_event_CO2( lv_event_t * e);
extern lv_obj_t *ui_CO2;
extern lv_obj_t *ui_Thermostat_setting_header1;
void ui_event_Thermostat_setting_header1_Setting_back_button( lv_event_t * e);
void ui_event_Thermostat_setting_header1_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container2;
extern lv_obj_t *ui_Override_speed_container1;
extern lv_obj_t *ui_co2_target;
extern lv_obj_t *ui_Container11;
extern lv_obj_t *ui_co2_symbol1;
extern lv_obj_t *ui_Label11;
// SCREEN: ui_Schedule
void ui_Schedule_screen_init(void);
void ui_event_Schedule( lv_event_t * e);
extern lv_obj_t *ui_Schedule;
extern lv_obj_t *ui_Schedule_header;
void ui_event_Schedule_header_Setting_back_button( lv_event_t * e);
void ui_event_Schedule_header_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container14;
extern lv_obj_t *ui_TabView1;
extern lv_obj_t *ui_DAY;
extern lv_obj_t *ui_Day_heat_container;
extern lv_obj_t *ui_Day_heat_setpoint;
extern lv_obj_t *ui_Label14;
extern lv_obj_t *ui_Day_cool_container;
extern lv_obj_t *ui_Label13;
extern lv_obj_t *ui_Day_cool_setpoint;
extern lv_obj_t *ui_Divider2;
extern lv_obj_t *ui_Day_time_container;
extern lv_obj_t *ui_Day_hrs_container;
extern lv_obj_t *ui_Day_hr;
extern lv_obj_t *ui_Label16;
extern lv_obj_t *ui_Day_min_container;
extern lv_obj_t *ui_Day_min;
extern lv_obj_t *ui_Label17;
extern lv_obj_t *ui_NIGHT;
extern lv_obj_t *ui_Night_heat_container;
extern lv_obj_t *ui_Night_heat_setpoint;
extern lv_obj_t *ui_Label15;
extern lv_obj_t *ui_Night_cool_container;
extern lv_obj_t *ui_Label18;
extern lv_obj_t *ui_Night_cool_setpoint;
extern lv_obj_t *ui_Divider3;
extern lv_obj_t *ui_Night_time_container;
extern lv_obj_t *ui_Night_hrs_container;
extern lv_obj_t *ui_Night_hr;
extern lv_obj_t *ui_Label19;
extern lv_obj_t *ui_Night_min_container;
extern lv_obj_t *ui_Night_min;
extern lv_obj_t *ui_Label20;
// SCREEN: ui_Settings
void ui_Settings_screen_init(void);
extern lv_obj_t *ui_Settings;
extern lv_obj_t *ui_Setting_header1;
void ui_event_Setting_header1_Setting_back_button( lv_event_t * e);
extern lv_obj_t *ui_Container3;
extern lv_obj_t *ui_Settings_buttons_left;
void ui_event_equipment_button( lv_event_t * e);
extern lv_obj_t *ui_equipment_button;
extern lv_obj_t *ui_Label25;
void ui_event_temp_limit_button( lv_event_t * e);
extern lv_obj_t *ui_temp_limit_button;
extern lv_obj_t *ui_Label26;
void ui_event_equipment_button2( lv_event_t * e);
extern lv_obj_t *ui_equipment_button2;
extern lv_obj_t *ui_Label27;
extern lv_obj_t *ui_Divider4;
extern lv_obj_t *ui_Settings_buttons_right;
void ui_event_schedule_button2( lv_event_t * e);
extern lv_obj_t *ui_schedule_button2;
extern lv_obj_t *ui_Label23;
// SCREEN: ui_Equipment
void ui_Equipment_screen_init(void);
void ui_event_Equipment( lv_event_t * e);
extern lv_obj_t *ui_Equipment;
extern lv_obj_t *ui_Setting_header2;
void ui_event_Setting_header2_Setting_back_button( lv_event_t * e);
void ui_event_Setting_header2_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container4;
extern lv_obj_t *ui_controller_type_container;
extern lv_obj_t *ui_Label35;
void ui_event_controller_type( lv_event_t * e);
extern lv_obj_t *ui_controller_type;
extern lv_obj_t *ui_heat_type_container;
extern lv_obj_t *ui_Label36;
extern lv_obj_t *ui_heat_type;
extern lv_obj_t *ui_cool_type_container;
extern lv_obj_t *ui_Label37;
extern lv_obj_t *ui_cool_type;
extern lv_obj_t *ui_makeup_air_container;
extern lv_obj_t *ui_Label38;
extern lv_obj_t *ui_makeup_air_switch;
// SCREEN: ui_Temp_limits
void ui_Temp_limits_screen_init(void);
void ui_event_Temp_limits( lv_event_t * e);
extern lv_obj_t *ui_Temp_limits;
extern lv_obj_t *ui_Thermostat_setting_header2;
void ui_event_Thermostat_setting_header2_Setting_back_button( lv_event_t * e);
void ui_event_Thermostat_setting_header2_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container5;
extern lv_obj_t *ui_heat_limit_container;
extern lv_obj_t *ui_heat_limit;
extern lv_obj_t *ui_Label28;
extern lv_obj_t *ui_Divider5;
extern lv_obj_t *ui_Override_cool_container1;
extern lv_obj_t *ui_cool_limit;
extern lv_obj_t *ui_Label29;
// SCREEN: ui_Temp_offsets
void ui_Temp_offsets_screen_init(void);
void ui_event_Temp_offsets( lv_event_t * e);
extern lv_obj_t *ui_Temp_offsets;
extern lv_obj_t *ui_Thermostat_setting_header3;
void ui_event_Thermostat_setting_header3_Setting_back_button( lv_event_t * e);
void ui_event_Thermostat_setting_header3_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container7;
extern lv_obj_t *ui_indoor_offset_container;
extern lv_obj_t *ui_Label30;
void ui_event_indoor_offset( lv_event_t * e);
extern lv_obj_t *ui_indoor_offset;
extern lv_obj_t *ui_indoor_offset_label;
extern lv_obj_t *ui_fan_offset_divider;
extern lv_obj_t *ui_fan_offset_container;
extern lv_obj_t *ui_Label39;
void ui_event_fan_offset( lv_event_t * e);
extern lv_obj_t *ui_fan_offset;
extern lv_obj_t *ui_fan_offset_label;
// SCREEN: ui_Wifi
void ui_Wifi_screen_init(void);
void ui_event_Wifi( lv_event_t * e);
extern lv_obj_t *ui_Wifi;
extern lv_obj_t *ui_Setting_header3;
void ui_event_Setting_header3_Setting_back_button( lv_event_t * e);
void ui_event_Setting_header3_Setting_accept_button( lv_event_t * e);
extern lv_obj_t *ui_Container8;
extern lv_obj_t *ui_ssid_container;
extern lv_obj_t *ui_Label40;
extern lv_obj_t *ui_wifi_ssid;
extern lv_obj_t *ui_password_container;
extern lv_obj_t *ui_Label41;
extern lv_obj_t *ui_wifi_password;
extern lv_obj_t *ui_log_name_container;
extern lv_obj_t *ui_Label42;
extern lv_obj_t *ui_log_name;
extern lv_obj_t *ui_wifi_keyboard;
// SCREEN: ui_Restart
void ui_Restart_screen_init(void);
extern lv_obj_t *ui_Restart;
extern lv_obj_t *ui_boot_message1;
extern lv_obj_t *ui____initial_actions0;



LV_FONT_DECLARE( ui_font_MaterialSymbols18);
LV_FONT_DECLARE( ui_font_MaterialSymbols24);

void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
