// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: ui

#ifndef _UI_UI_H
#define _UI_UI_H

#ifdef __cplusplus
extern "C" {
#endif

    #include "lvgl/lvgl.h"

#include "ui_helpers.h"
#include "components/ui_comp.h"
#include "components/ui_comp_hook.h"
#include "ui_events.h"
void Load_Animation( lv_obj_t *TargetObject, int delay);
// SCREEN: ui_Boot
void ui_Boot_screen_init(void);
extern lv_obj_t *ui_Boot;
extern lv_obj_t *ui_boot_message;
extern lv_obj_t *ui_boot_error_heading;
extern lv_obj_t *ui_Container6;
extern lv_obj_t *ui_boot_error_text;
// SCREEN: ui_Home
void ui_Home_screen_init(void);
extern lv_obj_t *ui_Home;
extern lv_obj_t *ui_Header;
extern lv_obj_t *ui_Humidity;
extern lv_obj_t *ui_Humidity_symbol;
extern lv_obj_t *ui_Humidity_value;
void ui_event_Fan( lv_event_t * e);
extern lv_obj_t *ui_Fan;
extern lv_obj_t *ui_Fan_symbol;
extern lv_obj_t *ui_Fan_value;
extern lv_obj_t *ui_out_temp;
extern lv_obj_t *ui_out_symbol;
extern lv_obj_t *ui_Out_temp_value;
extern lv_obj_t *ui_Footer;
extern lv_obj_t *ui_Message;
extern lv_obj_t *ui_Indoor_Temp;
extern lv_obj_t *ui_Container3;
extern lv_obj_t *ui_Indoor_temp_value;
extern lv_obj_t *ui_Temp_setpoint_container;
extern lv_obj_t *ui_Setpoint_row;
extern lv_obj_t *ui_Heat_setpoint_container;
extern lv_obj_t *ui_Heat_symbol;
extern lv_obj_t *ui_Heat_setpoint;
extern lv_obj_t *ui_Cool_setpoint_container;
extern lv_obj_t *ui_Cool_symbol;
extern lv_obj_t *ui_Cool_setpoint;
extern lv_obj_t *ui_Temp_header;
extern lv_obj_t *ui_Indoor_co2;
extern lv_obj_t *ui_co2_header;
extern lv_obj_t *ui_Container4;
extern lv_obj_t *ui_co2_value;
extern lv_obj_t *ui_co2_setpoint_container;
extern lv_obj_t *ui_co2_symbol;
extern lv_obj_t *ui_co2_target_value;
// SCREEN: ui_Fan_speed_override
void ui_Fan_speed_override_screen_init(void);
extern lv_obj_t *ui_Fan_speed_override;
extern lv_obj_t *ui_Setting_header;
void ui_event_Setting_header_Setting_back_button_Setting_back_label( lv_event_t * e);
void ui_event_Setting_header_Setting_accept_button_Setting_accept_label( lv_event_t * e);
extern lv_obj_t *ui_Container7;
extern lv_obj_t *ui_Override_speed_container;
extern lv_obj_t *ui_Fan_override_speed;
extern lv_obj_t *ui_Label5;
extern lv_obj_t *ui_Divider;
extern lv_obj_t *ui_Override_time_container;
extern lv_obj_t *ui_Override_hrs_container;
extern lv_obj_t *ui_Fan_override_hrs;
extern lv_obj_t *ui_Label1;
extern lv_obj_t *ui_Label6;
extern lv_obj_t *ui_Override_mins_container;
extern lv_obj_t *ui_Fan_override_mins;
extern lv_obj_t *ui_Label2;
// SCREEN: ui_Thermostat
void ui_Thermostat_screen_init(void);
extern lv_obj_t *ui_Thermostat;
extern lv_obj_t *ui_Thermostat_setting_header;
void ui_event_Thermostat_setting_header_Setting_back_button_Setting_back_label( lv_event_t * e);
void ui_event_Thermostat_setting_header_Setting_accept_button_Setting_accept_label( lv_event_t * e);
extern lv_obj_t *ui_Container1;
extern lv_obj_t *ui_Override_heat_container;
extern lv_obj_t *ui_Heat_override_setpoint;
extern lv_obj_t *ui_Label3;
extern lv_obj_t *ui_Override_cool_container;
extern lv_obj_t *ui_Label4;
extern lv_obj_t *ui_Cool_override_setpoint;
extern lv_obj_t *ui_Divider1;
extern lv_obj_t *ui_Schedule_buttons;
void ui_event_schedule_button( lv_event_t * e);
extern lv_obj_t *ui_schedule_button;
extern lv_obj_t *ui_Label8;
extern lv_obj_t *ui_Container12;
void ui_event_use_ac_button( lv_event_t * e);
extern lv_obj_t *ui_use_ac_button;
extern lv_obj_t *ui_Label9;
void ui_event_stop_ac_button( lv_event_t * e);
extern lv_obj_t *ui_stop_ac_button;
extern lv_obj_t *ui_Label12;
void ui_event_allow_ac_button( lv_event_t * e);
extern lv_obj_t *ui_allow_ac_button;
extern lv_obj_t *ui_Label22;
extern lv_obj_t *ui_Container10;
void ui_event_off_button( lv_event_t * e);
extern lv_obj_t *ui_off_button;
extern lv_obj_t *ui_Label7;
void ui_event_on_button( lv_event_t * e);
extern lv_obj_t *ui_on_button;
extern lv_obj_t *ui_Label10;
// SCREEN: ui_CO2
void ui_CO2_screen_init(void);
extern lv_obj_t *ui_CO2;
extern lv_obj_t *ui_Thermostat_setting_header1;
void ui_event_Thermostat_setting_header1_Setting_back_button_Setting_back_label( lv_event_t * e);
void ui_event_Thermostat_setting_header1_Setting_accept_button_Setting_accept_label( lv_event_t * e);
extern lv_obj_t *ui_Container2;
extern lv_obj_t *ui_Override_speed_container1;
extern lv_obj_t *ui_co2_target;
extern lv_obj_t *ui_Container11;
extern lv_obj_t *ui_co2_symbol1;
extern lv_obj_t *ui_Label11;
// SCREEN: ui_Schedule
void ui_Schedule_screen_init(void);
extern lv_obj_t *ui_Schedule;
extern lv_obj_t *ui_Schedule_header;
void ui_event_Schedule_header_Setting_accept_button_Setting_accept_label( lv_event_t * e);
extern lv_obj_t *ui_Container14;
extern lv_obj_t *ui_TabView1;
extern lv_obj_t *ui_DAY;
extern lv_obj_t *ui_Day_heat_container;
extern lv_obj_t *ui_Day_heat_setpoint;
extern lv_obj_t *ui_Label14;
extern lv_obj_t *ui_Day_cool_container;
extern lv_obj_t *ui_Label13;
extern lv_obj_t *ui_Day_cool_setpoint;
extern lv_obj_t *ui_Divider2;
extern lv_obj_t *ui_Day_time_container;
extern lv_obj_t *ui_Day_hrs_container;
extern lv_obj_t *ui_Day_hr;
extern lv_obj_t *ui_Label16;
extern lv_obj_t *ui_Day_min_container;
extern lv_obj_t *ui_Day_min;
extern lv_obj_t *ui_Label17;
extern lv_obj_t *ui_NIGHT;
extern lv_obj_t *ui_Night_heat_container;
extern lv_obj_t *ui_Night_heat_setpoint;
extern lv_obj_t *ui_Label15;
extern lv_obj_t *ui_Night_cool_container;
extern lv_obj_t *ui_Label18;
extern lv_obj_t *ui_Night_cool_setpoint;
extern lv_obj_t *ui_Divider3;
extern lv_obj_t *ui_Night_time_container;
extern lv_obj_t *ui_Night_hrs_container;
extern lv_obj_t *ui_Night_hr;
extern lv_obj_t *ui_Label19;
extern lv_obj_t *ui_Night_min_container;
extern lv_obj_t *ui_Night_min;
extern lv_obj_t *ui_Label20;
extern lv_obj_t *ui____initial_actions0;



LV_FONT_DECLARE( ui_font_MaterialSymbols18);
LV_FONT_DECLARE( ui_font_MaterialSymbols24);

void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
